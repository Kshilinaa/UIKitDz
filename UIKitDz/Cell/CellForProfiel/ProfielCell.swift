// ProfielCell.swift
// Copyright ¬© RoadMap. All rights reserved.

import UIKit

/// –Ø—á–µ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
final class ProfielCell: UITableViewCell {
    // MARK: - Constants

    /// –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —è—á–µ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
    static let identifier = "ProfielCell"

    // MARK: - Private properties

    /// –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    private let avatarImageView: UIImageView = {
        let imageView = UIImageView()
        return imageView
    }()

    /// –õ–µ–π–±–ª –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
    private let postCountLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana-Bold", size: 12)
        return label
    }()

    /// –õ–µ–π–±–ª –¥–ª—è —Ç–µ–∫—Å—Ç–∞ "–ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
    private let postLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana", size: 11)
        label.textAlignment = .left
        return label
    }()

    /// –õ–µ–π–±–ª –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    private let subscribersCountLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana-Bold", size: 12)
        return label
    }()

    /// –õ–µ–π–±–ª –¥–ª—è —Ç–µ–∫—Å—Ç–∞ "–ø–æ–¥–ø–∏—Å—á–∏–∫–∏"
    private let subscribersLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana", size: 11)
        label.textAlignment = .left
        return label
    }()

    /// –õ–µ–π–±–ª –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–æ–∫
    private let subscriptionsCountLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana-Bold", size: 12)
        return label
    }()

    /// –õ–µ–π–±–ª –¥–ª—è —Ç–µ–∫—Å—Ç–∞ "–ø–æ–¥–ø–∏—Å–∫–∏"
    private let subscriptionsLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana", size: 11)
        label.textAlignment = .left
        return label
    }()

    /// –õ–µ–π–±–ª —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    private let nameProfielLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana-Bold", size: 11)
        return label
    }()

    /// –õ–µ–π–±–ª —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    private let professionLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana", size: 11)
        return label
    }()

    /// –õ–µ–π–±–ª –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    private let changeLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana-Bold", size: 10)
        label.textAlignment = .center
        label.layer.cornerRadius = 5
        label.clipsToBounds = true
        label.backgroundColor = UIColor(named: "newBackgroandColor")
        return label
    }()

    /// –õ–µ–π–±–ª –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è
    private let shareProfielLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont(name: "Verdana-Bold", size: 10)
        label.textAlignment = .center
        label.layer.cornerRadius = 5
        label.clipsToBounds = true
        label.backgroundColor = UIColor(named: "newBackgroandColor")
        return label
    }()

    /// –ò–∫–æ–Ω–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    private let iconImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.layer.cornerRadius = 5
        imageView.clipsToBounds = true
        imageView.backgroundColor = UIColor(named: "newBackgroandColor")
        return imageView
    }()

    /// –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-—Å–∞–π—Ç–∞
    private let buttonWeb: UIButton = {
        let webSite = UIButton()
        webSite.setTitle(" üìé www.spacex.com", for: .normal)
        webSite.titleLabel?.font = UIFont(name: "Verdana", size: 10)
        webSite.setTitleColor(.blue, for: .normal)
        webSite.titleLabel?.textAlignment = .left
        return webSite
    }()

    var linkButtonHandler: (() -> ())?

    // MARK: - Life cycle

    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        contentView.backgroundColor = .white
        contentView.addSubview(avatarImageView)
        contentView.addSubview(postCountLabel)
        contentView.addSubview(postLabel)
        contentView.addSubview(subscribersCountLabel)
        contentView.addSubview(subscribersLabel)
        contentView.addSubview(subscriptionsCountLabel)
        contentView.addSubview(subscriptionsLabel)
        contentView.addSubview(nameProfielLabel)
        contentView.addSubview(professionLabel)
        contentView.addSubview(changeLabel)
        contentView.addSubview(shareProfielLabel)
        contentView.addSubview(iconImageView)
        contentView.addSubview(buttonWeb)

        makeAvatarImageViewConstraints()
        makePostCountLabelConstraints()
        makePostLabelConstraints()
        makeSubscribersCountLabelConstraints()
        makesubscribersLabelConstraints()
        makeSubscriptionsCountLabelConstraints()
        makeSubscriptionsLabelConstraints()
        makenameProfielLabelConstraints()
        makeprofessionLabelConstraints()
        makeChangeLabelConstraints()
        makeShareProfielLabelConstraints()
        makeIconImageViewConstraints()
        makeButtonWebConstraints()
    }

    @available(*, unavailable)
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    /// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —è—á–µ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
    func setUp(profielInfo: ProfielInfo) {
        avatarImageView.image = UIImage(named: profielInfo.avatarImage)
        postCountLabel.text = profielInfo.countPhoto
        postLabel.text = profielInfo.countPhotoText
        subscribersCountLabel.text = profielInfo.countSubscribers
        subscribersLabel.text = profielInfo.countSubscribersText
        subscriptionsCountLabel.text = profielInfo.countSubscriptions
        subscriptionsLabel.text = profielInfo.countSubscriptionsText
        nameProfielLabel.text = profielInfo.nameProfiel
        professionLabel.text = profielInfo.proffesionProfiel
        changeLabel.text = profielInfo.changeProfiel
        shareProfielLabel.text = profielInfo.shareProfiel
        iconImageView.image = UIImage(named: profielInfo.iconPeople)
        buttonWeb.setTitle(" üìé www.spacex.com", for: .normal)
    }

    // MARK: - Private Methods

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
    private func makeAvatarImageViewConstraints() {
        avatarImageView.translatesAutoresizingMaskIntoConstraints = false
        avatarImageView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 15).isActive = true
        avatarImageView.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 10).isActive = true
        avatarImageView.widthAnchor.constraint(equalToConstant: 80).isActive = true
        avatarImageView.heightAnchor.constraint(equalToConstant: 80).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ—Å—Ç–æ–≤
    private func makePostCountLabelConstraints() {
        postCountLabel.translatesAutoresizingMaskIntoConstraints = false
        postCountLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 155).isActive = true
        postCountLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 15).isActive = true
        postCountLabel.widthAnchor.constraint(equalToConstant: 50).isActive = true
        postCountLabel.heightAnchor.constraint(equalToConstant: 17).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –ø–æ–¥–ø–∏—Å—å—é –∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ—Å—Ç–æ–≤
    private func makePostLabelConstraints() {
        postLabel.translatesAutoresizingMaskIntoConstraints = false
        postLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 130).isActive = true
        postLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 30).isActive = true
        postLabel.widthAnchor.constraint(equalToConstant: 70).isActive = true
        postLabel.heightAnchor.constraint(equalToConstant: 12).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    private func makeSubscribersCountLabelConstraints() {
        subscribersCountLabel.translatesAutoresizingMaskIntoConstraints = false
        subscribersCountLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 225)
            .isActive = true
        subscribersCountLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 15).isActive = true
        subscribersCountLabel.widthAnchor.constraint(equalToConstant: 50).isActive = true
        subscribersCountLabel.heightAnchor.constraint(equalToConstant: 17).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –ø–æ–¥–ø–∏—Å—å—é –∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    private func makesubscribersLabelConstraints() {
        subscribersLabel.translatesAutoresizingMaskIntoConstraints = false
        subscribersLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 208).isActive = true
        subscribersLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 30).isActive = true
        subscribersLabel.widthAnchor.constraint(equalToConstant: 70).isActive = true
        subscribersLabel.heightAnchor.constraint(equalToConstant: 12).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–¥–ø–∏—Å–æ–∫
    private func makeSubscriptionsCountLabelConstraints() {
        subscriptionsCountLabel.translatesAutoresizingMaskIntoConstraints = false
        subscriptionsCountLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 291)
            .isActive = true
        subscriptionsCountLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 15).isActive = true
        subscriptionsCountLabel.widthAnchor.constraint(equalToConstant: 50).isActive = true
        subscriptionsCountLabel.heightAnchor.constraint(equalToConstant: 17).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –ø–æ–¥–ø–∏—Å—å—é –∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–¥–ø–∏—Å–æ–∫
    private func makeSubscriptionsLabelConstraints() {
        subscriptionsLabel.translatesAutoresizingMaskIntoConstraints = false
        subscriptionsLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 282).isActive = true
        subscriptionsLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 30).isActive = true
        subscriptionsLabel.widthAnchor.constraint(equalToConstant: 70).isActive = true
        subscriptionsLabel.heightAnchor.constraint(equalToConstant: 12).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –ø–æ–¥–ø–∏—Å—å—é –∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–¥–ø–∏—Å–æ–∫
    private func makenameProfielLabelConstraints() {
        nameProfielLabel.translatesAutoresizingMaskIntoConstraints = false
        nameProfielLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 15).isActive = true
        nameProfielLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 95).isActive = true
        nameProfielLabel.widthAnchor.constraint(equalToConstant: 170).isActive = true
        nameProfielLabel.heightAnchor.constraint(equalToConstant: 20).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–µ–π
    private func makeprofessionLabelConstraints() {
        professionLabel.translatesAutoresizingMaskIntoConstraints = false
        professionLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 15).isActive = true
        professionLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 115).isActive = true
        professionLabel.widthAnchor.constraint(equalToConstant: 170).isActive = true
        professionLabel.heightAnchor.constraint(equalToConstant: 20).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –ø—Ä–æ—Ñ–∏–ª—è
    private func makeChangeLabelConstraints() {
        changeLabel.translatesAutoresizingMaskIntoConstraints = false
        changeLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 15).isActive = true
        changeLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 187).isActive = true
        changeLabel.widthAnchor.constraint(equalToConstant: 155).isActive = true
        changeLabel.heightAnchor.constraint(equalToConstant: 27).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ—Ñ–∏–ª–µ–º
    private func makeShareProfielLabelConstraints() {
        shareProfielLabel.translatesAutoresizingMaskIntoConstraints = false
        shareProfielLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 175).isActive = true
        shareProfielLabel.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 187).isActive = true
        shareProfielLabel.widthAnchor.constraint(equalToConstant: 155).isActive = true
        shareProfielLabel.heightAnchor.constraint(equalToConstant: 27).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏
    private func makeIconImageViewConstraints() {
        iconImageView.translatesAutoresizingMaskIntoConstraints = false
        iconImageView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 340).isActive = true
        iconImageView.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 190).isActive = true
        iconImageView.widthAnchor.constraint(equalToConstant: 22).isActive = true
        iconImageView.heightAnchor.constraint(equalToConstant: 22).isActive = true
    }

    /// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç
    private func makeButtonWebConstraints() {
        buttonWeb.translatesAutoresizingMaskIntoConstraints = false
        buttonWeb.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 10).isActive = true
        buttonWeb.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 140).isActive = true
        buttonWeb.widthAnchor.constraint(equalToConstant: 150).isActive = true
        buttonWeb.heightAnchor.constraint(equalToConstant: 30).isActive = true
        buttonWeb.addTarget(self, action: #selector(openLink), for: .touchUpInside)
    }

    // MARK: - Actions

    /// –û—Ç—Ä–∫—Ç—ã–µ –≤—ç–±-—Å–∞–π—Ç–∞
    @objc private func openLink() {
        linkButtonHandler?()
    }
}
